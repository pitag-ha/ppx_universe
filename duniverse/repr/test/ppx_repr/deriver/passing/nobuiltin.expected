type unit = string[@@deriving repr]
include struct let unit_t = Repr.string end[@@ocaml.doc "@inline"][@@merlin.hide
                                                                    ]
module Nobuiltin_t =
  struct
    type t = ((unit)[@nobuiltin ])[@@deriving repr]
    include struct let t = unit_t end[@@ocaml.doc "@inline"][@@merlin.hide ]
    let (_ : string Repr.t) = t
  end
module Nobuiltin_foo =
  struct
    type foo = ((unit)[@repr.nobuiltin ])[@@deriving repr]
    include struct let foo_t = unit_t end[@@ocaml.doc "@inline"][@@merlin.hide
                                                                  ]
    let (_ : string Repr.t) = foo_t
  end
module Nobuiltin_operator =
  struct
    let result_t a b = Repr.pair a b
    let int32_t = Repr.int
    let int64_t = Repr.bool
    type u = (((((int32)[@nobuiltin ]), int64) result)[@nobuiltin ])[@@deriving
                                                                    repr]
    include struct let u_t = result_t int32_t Repr.int64 end[@@ocaml.doc
                                                              "@inline"]
    [@@merlin.hide ]
    let (_ : (int * int64) Repr.t) = u_t
  end
